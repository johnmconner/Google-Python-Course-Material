def calculate_frequencies(file_contents):
    # Here is a list of punctuations and uninteresting words you can use to process your text
    punctuations = '''!()-[]{};:'"\,<>./?@#$%^&*_~'''
    uninteresting_words = ["the", "a", "to", "if", "is", "it", "of", "and", "or", "an", "as", "i", "me", "my", \
    "we", "our", "ours", "you", "your", "yours", "he", "she", "him", "his", "her", "hers", "its", "they", "them", \
    "their", "what", "which", "who", "whom", "this", "that", "into", "in", "am", "are", "was", "were", "be", "been", "being", \
    "have", "has", "had", "do", "does", "did", "but", "at", "by", "with", "from", "here", "when", "where", "how", \
    "all", "any", "both", "each", "few", "more", "some", "such", "no", "nor", "too", "very", "can", "will", "just"]
    
    def clean_word(word):
        cleaned_word = ''
        if word not in uninteresting_words:
            for punctuation in punctuations:
                    for letter in word:
                        if letter not in punctuations:
                            cleaned_word += letter
                    return cleaned_word
        else:
            return ''
        
    def cleaned_list(file_contents):
        word_list = file_contents.split()
        cleaned_list = [clean_word(word.lower()) for word in word_list]
        return cleaned_list
                
    def freq(cleaned_list):
        dict = {}
        count = 1
        for word in cleaned_list:
            if word != '':
                if word in dict:
                    dict[word] += 1
                else:
                    dict[word] = count
        return dict
        
     #wordcloud
    cloud = wordcloud.WordCloud()
    cloud.generate_from_frequencies(freq(cleaned_list(file_contents)))
    return cloud.to_array()
        
calculate_frequencies(file_contents)
myimage = calculate_frequencies(file_contents)
plt.imshow(myimage, interpolation = 'nearest')
plt.axis('off')
plt.show() 
      
    
    
